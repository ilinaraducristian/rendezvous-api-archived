{
  "name": "rendezvous-api",
  "private": true,
  "license": "MIT",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "build:api": "docker build -t ilinaraducristian/rendezvous-api:0.0.1 -f ./Dockerfile .",
    "push:api": "docker push ilinaraducristian/rendezvous-api:0.0.1",
    "apply:api": "kubectl apply -f ./kubernetes/deployments/rendezvous-api.deployment.yml && kubectl rollout restart deployment rendezvous-api-deployment",
    "build:databse": "docker build -t ilinaraducristian/rendezvous-database:0.0.1 -f ./Dockerfile_database .",
    "push:databse": "docker push ilinaraducristian/rendezvous-database:0.0.1",
    "apply:databse": "kubectl apply -f ./kubernetes/deployments/rendezvous-databse.deployment.yml && kubectl rollout restart deployment rendezvous-databse-deployment",
    "build:iam": "docker build -t ilinaraducristian/rendezvous-iam:0.0.1 -f ./Dockerfile_iam .",
    "push:iam": "docker push ilinaraducristian/rendezvous-iam:0.0.1",
    "apply:iam": "kubectl apply -f ./kubernetes/deployments/rendezvous-iam.deployment.yml && kubectl rollout restart deployment rendezvous-iam-deployment",
    "build:object-store": "docker build -t ilinaraducristian/rendezvous-object:0.0.1 -f ./Dockerfile_object-store .",
    "push:object-store": "docker push ilinaraducristian/rendezvous-object:0.0.1",
    "apply:object-store": "kubectl apply -f ./kubernetes/deployments/rendezvous-object-store.deployment.yml && kubectl rollout restart deployment rendezvous-object-store-deployment",
    "build:proxy": "docker build -t ilinaraducristian/rendezvous-proxy:0.0.1 -f ./Dockerfile_proxy .",
    "push:proxy": "docker push ilinaraducristian/rendezvous-proxy:0.0.1",
    "apply:proxy": "kubectl apply -f ./kubernetes/deployments/rendezvous-proxy.deployment.yml && kubectl rollout restart deployment rendezvous-proxy-deployment",
    "build:all": "yarn run build:api && yarn run build:databse && yarn run build:iam && yarn run build:object-store && yarn run build:proxy",
    "push:all": "yarn run push:api && yarn run push:databse && yarn run push:iam && yarn run push:object-store && yarn run push:proxy",
    "buildandpush": "yarn run build:all && yarn run push:all",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch -e \"node --trace-warnings\"",
    "start:debug": "nest start --debug --watch",
    "start:prod": "NODE_PATH=/usr/local/share/.config/yarn/global/node_modules ENVIRONMENT=production node main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^8.0.5",
    "@nestjs/core": "^8.0.5",
    "@nestjs/platform-fastify": "^8.0.5",
    "@nestjs/typeorm": "^8.0.2",
    "@nestjs/websockets": "^8.0.5",
    "dotenv": "^10.0.0",
    "keycloak-connect": "^15.0.0",
    "minio": "^7.0.19",
    "mysql2": "^2.2.5",
    "nest-keycloak-connect": "^1.7.1",
    "node-fetch": "^2.6.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.3.0",
    "socket.io": "^4.1.2",
    "typeorm": "^0.2.32"
  },
  "devDependencies": {
    "mediasoup": "^3.8.0",
    "@nestjs/cli": "^8.1.1",
    "@nestjs/schematics": "^8.0.2",
    "@nestjs/testing": "^8.0.5",
    "@types/express": "^4.17.11",
    "@types/jest": "^26.0.22",
    "@types/minio": "^7.0.9",
    "@types/node": "^16.4.10",
    "@types/supertest": "^2.0.10",
    "@typescript-eslint/eslint-plugin": "^4.19.0",
    "@typescript-eslint/parser": "^4.19.0",
    "eslint": "^7.22.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-prettier": "^3.3.1",
    "jest": "^27.0.6",
    "prettier": "^2.2.1",
    "rimraf": "^3.0.2",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.4",
    "ts-loader": "^9.2.5",
    "ts-node": "^10.1.0",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
